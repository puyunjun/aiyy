<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017\12\18 0018
 * Time: 10:21
 */

namespace app\user\home;

use think\Controller;
use app\user\model\home\User;
use think\Db;
use think\File;
use app\user\validate\MyInfo As UserMyInfo;
use app\index\controller\AliyunOss;
use OSS\Core\OssUtil;
class MyInfo extends Common
{

    private static $OssUpload;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        self::$OssUpload = AliyunOss::getinstance()->OssUpload();
    }
    public function index(){
        //当前用户基本信息
        $this->assign('base_info',User::get(UID));
        $id= User::get(UID)['id'];
        $wd=Db::name('user_video')->where('uid',$id)->select();
        $this->assign("video_url", $wd);
        return $this->fetch();
    }

    //上传接口
    public function uploadHeadImg($filePath = ''){
        /*上传函数*/
        //调用上传接口  用于用户上传头像
        $bucket = 'puyunjun'; //阿里云上传模版名
        $object = time().UID.'.png';
        //$filePath = $_FILES['file']['tmp_name'];
        try{
            $res = self::$OssUpload->uploadFile($bucket, $object, $filePath);
            //$res = $this->putObjectByRawApis(self::$OssUpload,$bucket,$object,$filePath);  分片参考
        } catch(OssException $e) {
            printf(__FUNCTION__ . ": FAILED\n");
            printf($e->getMessage() . "\n");
        }
        return $res;
    }

    public function modify()
    {

         $file = request()->file('image');

        $data = $this->get_data();
        // 移动到框架应用根目录/public/uploads/ 目录下
        if($file) {

          $res_up =  $this->uploadHeadImg($file->getPathname());
          $data['head_img'] = $res_up['info']['url'];
            /*$info = $file->move(ROOT_PATH . 'public' . DS . 'static'. DS . 'home'. DS . 'css'. DS . 'wapcssjsimg'. DS . 'images'. DS . 'head');
            if ($info) {
                $data['head_img'] = $info->getSaveName();
            } else {
                echo $file->getError();
            }*/
        }
        $validate = $this->validate($data,'MyInfo');
        if($validate !== true ){
            return json($validate);
        }
             /* $result =  Db::name('user')
                ->where('id',$id)
                ->update($data);*/

        $result = User::where('id',UID)->update($data);
        if(User::get(array('id'=>UID))->group_id === 0){
                $data['group_id'] = 1;
        }
        //return file_get_contents(url('index/index/index','',true,true));
        if($result !== false){
            return json(true);
        }

   }

   private function get_data(){
       $data = [
           'nickname'   =>   request()->post('nickname'),                            // 昵称
           'autograph'  =>   request()->post('autograph'),                          //个性签名
           'real_name'  =>   request()->post('real_name'),                             //姓名
           'city_id'    =>   request()->post('city_id'),                             //地址
           'qq'    =>         request()->post('qq'),                                        //qq
           'height' =>        request()->post('height'),                                 //身高
           'measurement' =>  request()->post('measurement'),                          //三围
           'weight' =>        request()->post('weight'),                               //体重
           'interest' =>      request()->post('interest'),                          //爱好
           'occupation_id' => request()->post('occupation'),                          //职业
           'address' => request()->post('address'),                          //出没地 ********
           'birthday' => strtotime(request()->post('birthday')),                          //生日

       ];

       return $data;
   }





}