<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018\1\16 0016
 * Time: 19:17
 */

namespace app\user\home;
use app\index\controller\Aliyun;
use app\user\model\home\User;
use think\Session;
use app\user\model\home\Sign as SignInModel;

use think\Db;
use app\user\model\home\Login;
use think\Url;
use app\user\model\home\Identify;
use app\user\model\home\Privilege;

class BecomeEscort extends Common
{

    public static $model;

    private static $Aliyun;

    public $login_model;
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        self::$model = new SignInModel;
        self::$Aliyun = Aliyun::getinstance();
        $this->login_model = new Login();
        $this->assign('url_root', config('root_url'));

    }
    public function ajax(){

        if ($this->request->isAjax()) {

            //对比验证码  ,验证码从session里面取
            //模拟session 验证码
            $verify = request()->post('verify_code');
            if (request()->session('verify_code') !== $verify) {

                return json(array('status' => false, 'msg' => '验证码不正确'));
            }else{
                Session::delete('verify_code');
                $forword  = request()->post('forword');
                //查询是否已经申请过
                $is_has_verify = Db::name('escort_user')->where('uid',UID)->value('status');
                $data =array(
                    'create_time'=>request()->time(),
                    'uid'=>UID,
                    'status'=>2
                );
                $data_sys_new = array(
                    'uid'=>UID,
                    'sys_news_create_time'=>request()->time(),
                    'sys_news_content'=>'您正在申请成为本平台伴游，请等待管理员审核，注意查看消息提示',
                );
                Db::startTrans();
                try{
                    if($is_has_verify === 0){
                        //审核未通过
                        Db::name('escort_user')->where('uid',UID)->setField('status',2);
                    }else{
                        Db::name('escort_user')->insert($data);
                    }
                    //将系统消息发送给用户
                    Db::name('member_sys_news')->insert($data_sys_new);
                    Db::name('__user__')->where('id',UID)->setField('forword',$forword);
                    Db::commit();
                } catch (\Exception $e) {
                    // 回滚事务
                    Db::rollback();
                }

                //Db::name('user')->where('id',UID)->update(['is_escort' => 1]);
                return json(array('status' => true, 'msg' => '申请成功，等待管理员审核'));
            }
            return json(array('status' => false, 'msg' => '服务器繁忙，稍后再试'));

        }
    }
    public function index(){
        $type= Identify::where('uid',UID)->find();
        $privilege = new Privilege();
        $is_upmember = $privilege->sel_privilege()->allow_priview_photo;
        if(request()->isAjax()){

            if(!$type  || $type->status !== 1){
                return json(array(
                    'code'=>103,
                    'msg'=>'会员未认证，是否认证'
                ));
            }
            //判断是否是升级会员
            if(!$is_upmember){
                return json(array(
                    'code'=>102,
                    'msg'=>'至少为白银会员才可成为伴游，是否升级'
                ));
            }
            //都通过，调用获取验证码方法
            //$this->get_verify(User::where('id',UID)->value('phone'));
            return json(array('code'=>200));
        }

        if(request()->isGet()){
            if(!$type  || $type->status !== 1 || !$is_upmember){
                //不满足条件直接跳转回去;
                $this->redirect('user/index/index');
            }
            $data= Db::name('user')
                ->where('id',UID)
                ->find();
            $this->assign("data", $data);
            $this->assign("type", $type);
            $forgetPass = request()->param('forget') ? intval(1) : '';
            $this->assign('forgetPass', $forgetPass);
            return $this->fetch();
        }

    }
    public function get_verify($mobile_phone = '')
    {
        $id=UID;
        $name= Db::name('user')
            ->alias('u')
            ->where("u.id=$id")
            ->join('dp_escort_user deu','deu.uid = u.id','LEFT')
            ->field('u.is_escort,deu.status')
            ->find();
        if ($name['is_escort'] === 1) {
            return json(array('code' => 300, 'msg' => '您已成为伴游,请勿重复注册'));
        }elseif($name['status'] === 2){

            return json(array('code' => 301, 'msg' => '管理员正在审核'));
        }

        //调用短信接口  发送验证码，返回发送成功状态码
        //模拟session  验证码
        $code = self::$Aliyun->generate_code();

        $response = self::$Aliyun->sendSms(
            "爱约游", // 短信签名
            "SMS_117521361", // 短信模板编号
            $mobile_phone, // 短信接收者
            Array(  // 短信模板中字段的值
                "code" => $code,
            ),
            time()   // 流水号,选填
        );
        if ($response->Code == 'OK') {
            //设置session
            Session::set('verify_code', $code);
            return json(array('code' => 200, 'msg' => '发送成功'));
        }
    }


    //验证成为伴游
    public function check_verify(){
        if(intval(request()->post('verify')) === intval(session('verify_code'))){
           $re =User::where('id',UID)->setField('is_escort',1);
           if($re){
               return json(array('msg'=>'验证成功，成为伴游'));
           }else{
               return json(array('msg'=>'稍后再试'));
           }

        }
    }
}